name: deploy discord commands to lambda
on: 
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Deploy code to Lambda
      uses: denzalman/lambda-python-action@v1.1.0
      with:
        lambda_layer_arn: 'arn:aws:lambda:us-east-1:563998838810:layer:discord-bot-layer'
        lambda_function_name: 'lambda_function'
        lambda_region: ${{ secrets.AWS_REGION }}
        requirements_txt: 'requirements.txt'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Upload commands to S3 
      uses: tpaschalis/s3-sync-action@master
      env:
       FILE: ./discord/commands/commands.json
       AWS_REGION: ${{ secrets.AWS_REGION }}
       AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  publish:
    needs: build
    if: needs.build.result == 'success'
    runs-on: ubuntu-latest
    steps:
    - name: Publish the commands
      uses: actions/checkout@master
    - name: Install Python 3
      uses: actions/setup-python@v1
      with:
        python-version: 3.10
    - name: dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Publish commands for Discord
      env: 
        APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
        GUILD_ID: ${{ secrets.GUILD_ID }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
          output=$(python discord/send_commands.py)
          echo "::set-output name=publishStatus::$output"
      id: step1
    - name: Print status
      run: echo "${{ steps.step1.outputs.publishStatus }}"
